#user  nobody;
worker_processes        4;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
error_log  /var/www/error.log  warn;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
 ## MIME types
    include /etc/nginx/mime.types;
    default_type    application/octet-stream;

 ## Size Limits
  client_body_buffer_size      16k;
  client_header_buffer_size     1k;
  client_max_body_size          1k;
  large_client_header_buffers 1 1k;

 ## Global SSL options
  ssl_ciphers HIGH:!ADH:!MD5;
  ssl_prefer_server_ciphers on;
  ssl_protocols TLSv1;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 5m;

 ## Timeouts 
  client_body_timeout      60;
  client_header_timeout    60;
  keepalive_timeout     60 60;
  send_timeout             60;

 ## General Options
  ignore_invalid_headers   on;
  keepalive_requests       10;
  recursive_error_pages    on;
  server_tokens           off;
  server_name_in_redirect off;
  sendfile                 on;

 ## TCP options  
  tcp_nopush  on;
  tcp_nodelay on;

 ## Compression
  gzip                 on;
  gzip_static          on;
  gzip_buffers      16 8k;
  gzip_http_version   1.0;
  gzip_comp_level       6;
  gzip_min_length     100;
  gzip_types        text/plain text/html text/css image/x-icon image/gif;
  gzip_vary            on;

 ## Log Format
  log_format  main  '$remote_addr $host $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$gzip_ratio"';

 ## handle media
   server {
      listen      80;
      server_name  media.agoodcloud.com media.digitalmycelium.com;

#     symlinking for now
#      location /admin/ {
#              access_log  off;
#              error_log   off;
#              expires     max;
#              root /root/.virtualenvs/mycelium/lib/python2.6/site-packages/django/contrib/admin/media;
#      }
#      location /cms/ {
#              access_log  off;
#              error_log   off;
#              expires     max;
#              root /root/.virtualenvs/mycelium/src/django-cms/cms/media/cms;
#      }     
      location / {
              access_log  off;
              error_log   off;
              expires     max;
              root /var/www/mycelium.git/media;
      }
 
  }

 ## Redirect http to https
  server {
      add_header Cache-Control "public, must-revalidate";
      access_log  /var/log/nginx/access.log main;
      error_log   /var/log/nginx/error.log info;
      expires     90d;
      listen      80;
      root        /var/empty;
      server_name agoodcloud.com www.agoodcloud.com agoodcloud.org www.agoodcloud.org agoodcloud.net www.agoodcloud.net;

      location / {
        if ($host ~* ^(agoodcloud\.com|www\.agoodcloud\.com)$ ) {
          rewrite  ^/(.*)$  https://www.agoodcloud.com/$1  permanent;
        }
        return 444;
      }
  }

  # temporary - the digitalmycelium part of this should go away shortly.
  server  {
        listen  80;
        server_name  digitalmycelium.com www.digitalmycelium.com;
        server_name_in_redirect off;
  
        error_page      502  /502.html;
        location = /502.html {
               root   /var/www/mycelium.git/mycelium/templates;
        }
  
        location / {
                proxy_pass      http://127.0.0.1:8000; 
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
  
        location /media/ {
                root /var/www/mycelium.git;
        }
  }

  server {
      access_log  /var/log/nginx/access.log main;
      add_header  Cache-Control "public, must-revalidate";
      error_log   /var/log/nginx/error.log info;
      expires     90d;
      listen      443;
      root        /var/www/mycelium.git;
      server_name  agoodcloud.com www.agoodcloud.com;

     ## SSL Certs (specific to this URL)
      ssl on;
      ssl_certificate /root/agoodcloud.com.crt;
      ssl_certificate_key /root/agoodcloud.com.key;

     ## Strict Transport Security (ForceHTTPS)
      add_header Strict-Transport-Security "max-age=2592000; includeSubdomains";

     ## Only allow GET and HEAD (and POST) request methods
      if ($request_method !~ ^(GET|HEAD|POST)$ ) {
         return 444;
      }

     ## Deny illegal Host headers
      if ($host !~* ^(agoodcloud.com|www.agoodcloud.com)$ ) {
        return 444;
      }

     ## Deny certain User-Agents (case insensitive)
    # if ($http_user_agent ~* (Baiduspider|webalta|Wget|WordPress|youdao) ) {
    #   return 444;
    # }

     ## Deny certain Referers (case insensitive)
      if ($http_referer ~* (\dating|diamond|forsale|girl|jewelry|nudit|organic|poker|porn|poweroversoftware|sex|teen|webcam|zippo|zongdo) ) {
        return 444;
      }

     ## Only allow these full URI paths relative to document root. If you only want
     ## to reference the filename use $request_filename instead of $request_uri
     #if ($request_uri !~* (^\/|\.html|\.gif|\.jpg|\.png|example\.css|robots\.txt|favicon\.ico)$ ) {
     #  return 444;
     #}

     ## Redirect from non-www to www
      if ($host = 'agoodcloud.com' ) {
        rewrite  ^/(.*)$  https://www.agoodcloud.com/$1  permanent;
      }

     ## Stop Image and Document Hijacking
      location ~* (\.jpg|\.gif|\.png|\.css)$ {
        if ($http_referer !~ ^(https://agoodcloud.com) ) {
          return 444;
        }
      }

     ## Restricted Access directory
     # location ^~ /secure/ {
     #       allow 127.0.0.1/32;
     #       allow 10.10.10.0/24;
     #       deny all;
     #       auth_basic "RESTRICTED ACCESS";
     #       auth_basic_user_file /var/www/htdocs/secure/access_list;
     #   }

      error_page      502  /502.html;
      location = /502.html {
             root   /var/www/mycelium.git/mycelium/templates;
      }

      location / {
              proxy_pass      http://127.0.0.1:8000; 
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }

      location /media/ {
              root /var/www/mycelium.git;
      }
    
     ## All other errors get the generic error page
     #error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 495 496 497
     #           500 501 502 503 504 505 506 507 /error_page.html;
     #location  /example_error_page.html {
     #    internal;
     #}
   }
}

user    nginx;
